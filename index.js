const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const app = express();

const token = '8293319216:AAHV2jguaERB-_PMFJcjvh3tCyBMIwRM9rQ'; // –¢–≤–æ–π —Ç–æ–∫–µ–Ω
const bot = new TelegramBot(token, { polling: false });

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–≤–º–µ—Å—Ç–æ –ë–î –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç)
const users = {};
const timeSlots = {
  '14:00': { max: 10, current: 0 },
  '15:00': { max: 10, current: 0 }
};
const userDailyOrders = {}; // { userId: { date: 'YYYY-MM-DD', count: 0 } }

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const mainMenu = {
  reply_markup: {
    keyboard: [
      ['üçΩÔ∏è –ú–µ–Ω—é'],
      ['‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑']
    ],
    resize_keyboard: true
  }
};

const foodMenu = {
  reply_markup: {
    keyboard: [
      ['–ë–æ—Ä—â', '–©—Ä–æ–±'],
      ['–ë–æ—Ä—â–∏–∫', '–ë–æ—Ä—â–∏—â–µ'],
      ['–ë–æ—Ä—â–∏–∏–∏–∏'],
      ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
    ],
    resize_keyboard: true
  }
};

const timeMenu = {
  reply_markup: {
    keyboard: [
      ['14:00', '15:00'],
      ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
    ],
    resize_keyboard: true
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;

  if (!users[userId]) {
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤)');
    users[userId] = { step: 'register' };
  } else {
    showMainMenu(chatId);
  }
});

// –ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
function showMainMenu(chatId) {
  bot.sendMessage(chatId, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text;

  if (!users[userId]) return;

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
  if (users[userId].step === 'register') {
    users[userId] = {
      name: text,
      step: 'main',
      orders: []
    };
    showMainMenu(chatId);
    return;
  }

  // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
  if (text === 'üçΩÔ∏è –ú–µ–Ω—é') {
    bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ (–¥–æ 3):', foodMenu);
    users[userId].step = 'food';
  } 
  // –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞
  else if (text === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑') {
    if (users[userId].timeSlot) {
      timeSlots[users[userId].timeSlot].current--;
      users[userId].timeSlot = null;
      users[userId].orders = [];
      bot.sendMessage(chatId, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω!', mainMenu);
    } else {
      bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞.', mainMenu);
    }
  }
  // –í—ã–±–æ—Ä –±–ª—é–¥
  else if (users[userId].step === 'food' && ['–ë–æ—Ä—â', '–©—Ä–æ–±', '–ë–æ—Ä—â–∏–∫', '–ë–æ—Ä—â–∏—â–µ', '–ë–æ—Ä—â–∏–∏–∏–∏'].includes(text)) {
    if (users[userId].orders.length < 3) {
      users[userId].orders.push(text);
      bot.sendMessage(chatId, `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: ${text}. –í—ã–±—Ä–∞–Ω–æ: ${users[userId].orders.join(', ')}`, foodMenu);
    } else {
      bot.sendMessage(chatId, '‚ùå –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ –±–æ–ª—å—à–µ 3 –±–ª—é–¥!', foodMenu);
    }
  }
  // –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
  else if (users[userId].step === 'food' && text === '–ì–æ—Ç–æ–≤–æ') {
    if (users[userId].orders.length === 0) {
      bot.sendMessage(chatId, '‚ùå –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –±–ª—é–¥–∞!', foodMenu);
    } else {
      bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:', timeMenu);
      users[userId].step = 'time';
    }
  }
  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
  else if (users[userId].step === 'time' && ['14:00', '15:00'].includes(text)) {
    const today = new Date().toISOString().split('T')[0];
    if (!userDailyOrders[userId]) userDailyOrders[userId] = { date: today, count: 0 };
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 2 –∑–∞–∫–∞–∑–∞ –≤ –¥–µ–Ω—å
    if (userDailyOrders[userId].date === today && userDailyOrders[userId].count >= 2) {
      bot.sendMessage(chatId, '‚ùå –í–∞—à–∞ –µ–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å üéâ', mainMenu);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç
    if (timeSlots[text].current >= timeSlots[text].max) {
      bot.sendMessage(chatId, '‚ùå –ù–µ —É—Å–ø–µ–ª üòà –ú–µ—Å—Ç –Ω–µ—Ç!', mainMenu);
      return;
    }

    // –ë—Ä–æ–Ω–∏—Ä—É–µ–º –º–µ—Å—Ç–æ
    timeSlots[text].current++;
    users[userId].timeSlot = text;
    userDailyOrders[userId].count++;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞
    const orderText = `–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç ${users[userId].name} (@${msg.from.username || '–Ω–µ—Ç_—é–∑–µ—Ä–Ω–µ–π–º–∞'})\n` +
                      `–í—Ä–µ–º—è: ${text}\n` +
                      `–ë–ª—é–¥–∞: ${users[userId].orders.join(', ')}\n` +
                      `–û—Å—Ç–∞–ª–æ—Å—å –º–µ—Å—Ç: ${timeSlots[text].max - timeSlots[text].current}`;
    
    bot.sendMessage('5266215596', orderText); // –¢–≤–æ–π ID
    bot.sendMessage(chatId, `‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –í—Ä–µ–º—è: ${text}\n–û—Å—Ç–∞–ª–æ—Å—å –º–µ—Å—Ç: ${timeSlots[text].max - timeSlots[text].current}`, mainMenu);
    
    users[userId].orders = [];
    users[userId].step = 'main';
  }
  // –ù–∞–∑–∞–¥
  else if (text === '‚¨ÖÔ∏è –ù–∞–∑–∞–¥') {
    showMainMenu(chatId);
    users[userId].step = 'main';
  }
});

// –î–ª—è Render
app.use(express.json());
app.post('/webhook', (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

app.listen(process.env.PORT || 3000, () => {
  console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
});
