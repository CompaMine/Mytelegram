const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const app = express();

const token = '8293319216:AAHV2jguaERB-_PMFJcjvh3tCyBMIwRM9rQ';
const bot = new TelegramBot(token, { polling: false });

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
const users = {};
const timeSlots = {
  '14:00': { max: 10, current: 0 },
  '15:00': { max: 10, current: 0 }
};
const userOrders = {};
const adminPassword = 'DOBRO123q';
const menuItems = ['–ë–æ—Ä—â', '–ö–æ—Ç–ª–µ—Ç–∫–∞', '–ü—é—Ä–µ—à–∫–∞ —Å —Å–æ—Å–∏—Å–∫–æ–π‚ù§Ô∏è', '–°–æ–∫', '–ö–æ–∫—Ç–µ–π–ª—å'];
const reminders = {}; // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const mainMenu = {
  reply_markup: {
    keyboard: [
      ['üçΩÔ∏è –ú–µ–Ω—é'],
      ['‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑'],
      ['‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è']
    ],
    resize_keyboard: true
  }
};

const foodMenu = {
  reply_markup: {
    keyboard: [
      [menuItems[0], menuItems[1]],
      [menuItems[2], menuItems[3]],
      [menuItems[4]],
      ['‚úÖ –ì–æ—Ç–æ–≤–æ', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
    ],
    resize_keyboard: true
  }
};

const timeMenu = {
  reply_markup: {
    keyboard: [
      ['14:00', '15:00'],
      ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
    ],
    resize_keyboard: true
  }
};

const cancelMenu = {
  reply_markup: {
    keyboard: [['1', '2'], ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']],
    resize_keyboard: true
  }
};

const reminderMenu = {
  reply_markup: {
    keyboard: [['‚úÖ –í–∫–ª—é—á–∏—Ç—å', '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å'], ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']],
    resize_keyboard: true
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  
  if (!users[userId]) {
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:');
    users[userId] = { step: 'register' };
  } else {
    showMainMenu(chatId);
  }
});

bot.onText(/–ë–ª—é–¥–∞/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –º–µ–Ω—é:');
  users[msg.from.id] = { ...users[msg.from.id], step: 'waiting_password' };
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
setInterval(() => {
  const now = new Date();
  const currentTime = `${now.getHours()}:${now.getMinutes().toString().padStart(2, '0')}`;
  const currentDate = `${now.getDate()}.${now.getMonth() + 1}`;

  for (const userId in reminders) {
    const reminder = reminders[userId];
    if (
      reminder.time === currentTime && 
      reminder.active && 
      (!reminder.lastSent || reminder.lastSent !== currentDate)
    ) {
      bot.sendMessage(userId, `‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –ü–æ—Ä–∞ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑!`);
      reminders[userId].lastSent = currentDate;
    }
  }
}, 60000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text;
  const today = new Date().toISOString().split('T')[0];

  if (!users[userId]) return;

  // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
  if (text === '‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è') {
    if (reminders[userId]) {
      bot.sendMessage(chatId, 
        `–¢–µ–∫—É—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: ${reminders[userId].time}\n` +
        `–°—Ç–∞—Ç—É—Å: ${reminders[userId].active ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ'}`,
        reminderMenu
      );
    } else {
      bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä: 14:23)');
      users[userId].step = 'setting_reminder_time';
    }
    return;
  }

  if (users[userId].step === 'setting_reminder_time') {
    if (/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/.test(text)) {
      reminders[userId] = {
        time: text,
        active: false,
        lastSent: null
      };
      bot.sendMessage(chatId, `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ${text}. –í–∫–ª—é—á–∏—Ç—å?`, reminderMenu);
      users[userId].step = 'setting_reminder_status';
    } else {
      bot.sendMessage(chatId, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä: 14:23)');
    }
    return;
  }

  if (users[userId].step === 'setting_reminder_status') {
    if (text === '‚úÖ –í–∫–ª—é—á–∏—Ç—å') {
      reminders[userId].active = true;
      bot.sendMessage(chatId, `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ ${reminders[userId].time} –≤–∫–ª—é—á–µ–Ω–æ!`, mainMenu);
    } else if (text === '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å') {
      reminders[userId].active = false;
      bot.sendMessage(chatId, `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ ${reminders[userId].time} –≤—ã–∫–ª—é—á–µ–Ω–æ!`, mainMenu);
    }
    users[userId].step = 'main';
    return;
  }

  // –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...
  // [–ü—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π]
});

// [–û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π]

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.use(express.json());
app.post('/webhook', (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

app.listen(process.env.PORT || 3000, () => {
  console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
});

function showMainMenu(chatId) {
  bot.sendMessage(chatId, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu);
}

function updateFoodMenu() {
  foodMenu.reply_markup.keyboard = [
    [menuItems[0], menuItems[1]],
    [menuItems[2], menuItems[3]],
    [menuItems[4]],
    ['‚úÖ –ì–æ—Ç–æ–≤–æ', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
  ];
                                               }
