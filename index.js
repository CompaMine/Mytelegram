const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const app = express();

const token = '8293319216:AAHV2jguaERB-_PMFJcjvh3tCyBMIwRM9rQ';
const bot = new TelegramBot(token, { polling: false });

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
const users = {};
const timeSlots = {
  '14:00': { max: 10, current: 0 },
  '15:00': { max: 10, current: 0 }
};
const userOrders = {};
const adminPassword = 'DOBRO123q';
const menuItems = ['–ë–æ—Ä—â', '–ö–æ—Ç–ª–µ—Ç–∫–∞', '–ü—é—Ä–µ—à–∫–∞ —Å —Å–æ—Å–∏—Å–∫–æ–π‚ù§Ô∏è', '–°–æ–∫', '–ö–æ–∫—Ç–µ–π–ª—å'];
const reminders = {};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const mainMenu = {
  reply_markup: {
    keyboard: [
      ['üçΩÔ∏è –ú–µ–Ω—é'],
      ['‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑'],
      ['‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è']
    ],
    resize_keyboard: true
  }
};

const foodMenu = {
  reply_markup: {
    keyboard: [
      [menuItems[0], menuItems[1]],
      [menuItems[2], menuItems[3]],
      [menuItems[4]],
      ['‚úÖ –ì–æ—Ç–æ–≤–æ', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
    ],
    resize_keyboard: true
  }
};

const timeMenu = {
  reply_markup: {
    keyboard: [
      ['14:00', '15:00'],
      ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
    ],
    resize_keyboard: true
  }
};

const cancelMenu = {
  reply_markup: {
    keyboard: [['1', '2'], ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']],
    resize_keyboard: true
  }
};

const reminderMenu = {
  reply_markup: {
    keyboard: [['‚úÖ –í–∫–ª—é—á–∏—Ç—å', '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å'], ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']],
    resize_keyboard: true
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  
  if (!users[userId]) {
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:');
    users[userId] = { step: 'register' };
  } else {
    showMainMenu(chatId);
  }
});

bot.onText(/–ë–ª—é–¥–∞/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –º–µ–Ω—é:');
  users[userId] = { ...users[userId], step: 'waiting_password' };
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
setInterval(() => {
  const now = new Date();
  const currentTime = `${now.getHours()}:${now.getMinutes().toString().padStart(2, '0')}`;
  const currentDate = `${now.getDate()}.${now.getMonth() + 1}`;

  for (const userId in reminders) {
    const reminder = reminders[userId];
    if (
      reminder.time === currentTime && 
      reminder.active && 
      (!reminder.lastSent || reminder.lastSent !== currentDate)
    ) {
      bot.sendMessage(userId, `‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –ü–æ—Ä–∞ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑!`);
      reminders[userId].lastSent = currentDate;
    }
  }
}, 60000);

bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text;
  const today = new Date().toISOString().split('T')[0];

  if (!users[userId]) return;

  // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω—é
  if (users[userId].step === 'waiting_password') {
    if (text === adminPassword) {
      bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n1: –ù–æ–≤–æ–µ –±–ª—é–¥–æ\n2: –î—Ä—É–≥–æ–µ –±–ª—é–¥–æ\n–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–æ–º–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è\n"—Å—Ç–æ–ø" –¥–ª—è –≤—ã—Ö–æ–¥–∞');
      users[userId].step = 'editing_menu';
    } else {
      bot.sendMessage(chatId, '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!', mainMenu);
      users[userId].step = 'main';
    }
    return;
  }

  if (users[userId].step === 'editing_menu') {
    if (text.toLowerCase() === '—Å—Ç–æ–ø') {
      showMainMenu(chatId);
      users[userId].step = 'main';
      return;
    }

    const parts = text.split(':');
    if (parts.length === 2) {
      const index = parseInt(parts[0]) - 1;
      if (index >= 0 && index < menuItems.length) {
        menuItems[index] = parts[1].trim();
        updateFoodMenu();
        bot.sendMessage(chatId, `–ë–ª—é–¥–æ ${index + 1} –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: ${menuItems[index]}`);
      }
    } else if (!isNaN(text)) {
      const index = parseInt(text) - 1;
      if (index >= 0 && index < menuItems.length) {
        menuItems.splice(index, 1);
        updateFoodMenu();
        bot.sendMessage(chatId, `–ë–ª—é–¥–æ ${index + 1} —É–¥–∞–ª–µ–Ω–æ`);
      }
    }
    return;
  }

  // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
  if (text === '‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è') {
    if (reminders[userId]) {
      bot.sendMessage(chatId, 
        `–¢–µ–∫—É—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: ${reminders[userId].time}\n` +
        `–°—Ç–∞—Ç—É—Å: ${reminders[userId].active ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ'}`,
        reminderMenu
      );
      users[userId].step = 'reminder_settings';
    } else {
      bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä: 14:23)');
      users[userId].step = 'setting_reminder_time';
    }
    return;
  }

  if (users[userId].step === 'setting_reminder_time') {
    if (/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/.test(text)) {
      reminders[userId] = {
        time: text,
        active: false,
        lastSent: null
      };
      bot.sendMessage(chatId, `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ${text}. –í–∫–ª—é—á–∏—Ç—å?`, reminderMenu);
      users[userId].step = 'setting_reminder_status';
    } else {
      bot.sendMessage(chatId, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä: 14:23)');
    }
    return;
  }

  if (users[userId].step === 'setting_reminder_status' || users[userId].step === 'reminder_settings') {
    if (text === '‚úÖ –í–∫–ª—é—á–∏—Ç—å') {
      reminders[userId].active = true;
      bot.sendMessage(chatId, `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ ${reminders[userId].time} –≤–∫–ª—é—á–µ–Ω–æ!`, mainMenu);
    } else if (text === '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å') {
      reminders[userId].active = false;
      bot.sendMessage(chatId, `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ ${reminders[userId].time} –≤—ã–∫–ª—é—á–µ–Ω–æ!`, mainMenu);
    } else if (text === '‚¨ÖÔ∏è –ù–∞–∑–∞–¥') {
      showMainMenu(chatId);
    }
    users[userId].step = 'main';
    return;
  }

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
  if (users[userId].step === 'register') {
    users[userId] = {
      name: text,
      step: 'main',
      orders: [],
      date: today,
      username: msg.from.username
    };
    userOrders[userId] = { date: today, count: 0, orders: [] };
    showMainMenu(chatId);
    return;
  }

  // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
  if (text === 'üçΩÔ∏è –ú–µ–Ω—é') {
    if (userOrders[userId] && userOrders[userId].date === today && userOrders[userId].count >= 2) {
      bot.sendMessage(chatId, '‚ùå –í—ã —É–∂–µ —Å–¥–µ–ª–∞–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ (2) –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!', mainMenu);
    } else {
      bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ (–¥–æ 3):', foodMenu);
      users[userId].step = 'food';
    }
  }

  // –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞
  else if (text === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑') {
    if (userOrders[userId] && userOrders[userId].date === today && userOrders[userId].count > 0) {
      if (userOrders[userId].count === 1) {
        cancelOrder(userId, chatId, 0);
      } else {
        bot.sendMessage(chatId, '–ö–∞–∫–æ–π –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–∏—Ç—å?', cancelMenu);
        users[userId].step = 'canceling';
      }
    } else {
      bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ—Ç–º–µ–Ω—ã.', mainMenu);
    }
  }

  // –í—ã–±–æ—Ä –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã
  else if (users[userId].step === 'canceling') {
    if (['1', '2'].includes(text)) {
      cancelOrder(userId, chatId, parseInt(text) - 1);
    } else if (text === '‚¨ÖÔ∏è –ù–∞–∑–∞–¥') {
      showMainMenu(chatId);
    }
  }

  // –í—ã–±–æ—Ä –±–ª—é–¥
  else if (users[userId].step === 'food') {
    if (menuItems.includes(text)) {
      if (users[userId].orders.length < 3) {
        users[userId].orders.push(text);
        bot.sendMessage(chatId, `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: ${text}\n–í—ã–±—Ä–∞–Ω–æ: ${users[userId].orders.join(', ')}`, foodMenu);
      } else {
        bot.sendMessage(chatId, '‚ùå –ú–∞–∫—Å–∏–º—É–º 3 –±–ª—é–¥–∞!', foodMenu);
      }
    }
    else if (text === '‚úÖ –ì–æ—Ç–æ–≤–æ') {
      if (users[userId].orders.length === 0) {
        bot.sendMessage(chatId, '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã 1 –±–ª—é–¥–æ!', foodMenu);
      } else {
        bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:', timeMenu);
        users[userId].step = 'time';
      }
    }
    else if (text === '‚¨ÖÔ∏è –ù–∞–∑–∞–¥') {
      showMainMenu(chatId);
    }
  }

  // –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
  else if (users[userId].step === 'time') {
    if (['14:00', '15:00'].includes(text)) {
      if (userOrders[userId] && userOrders[userId].date === today && userOrders[userId].count >= 2) {
        bot.sendMessage(chatId, '‚ùå –í—ã —É–∂–µ —Å–¥–µ–ª–∞–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ (2) –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!', mainMenu);
        return;
      }

      if (timeSlots[text].current >= timeSlots[text].max) {
        bot.sendMessage(chatId, `‚ùå –í—Å–µ –º–µ—Å—Ç–∞ –Ω–∞ ${text} –∑–∞–Ω—è—Ç—ã! –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è.`, timeMenu);
      } else {
        timeSlots[text].current++;
        
        if (!userOrders[userId]) userOrders[userId] = { date: today, count: 0, orders: [] };
        if (userOrders[userId].date !== today) {
          userOrders[userId] = { date: today, count: 1, orders: [{ items: [...users[userId].orders], time: text }] };
        } else {
          userOrders[userId].count++;
          userOrders[userId].orders.push({ items: [...users[userId].orders], time: text });
        }

        users[userId].timeSlot = text;
        
        bot.sendMessage(chatId, `‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!\n–í—Ä–µ–º—è: ${text}\n–û—Å—Ç–∞–ª–æ—Å—å –º–µ—Å—Ç: ${timeSlots[text].max - timeSlots[text].current}`, mainMenu);
        
        const orderText = `–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç ${users[userId].name} (@${users[userId].username || '–Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞'})\n` +
                         `–ë–ª—é–¥–∞: ${users[userId].orders.join(', ')}\n` +
                         `–í—Ä–µ–º—è: ${text}\n` +
                         `–û—Å—Ç–∞–ª–æ—Å—å –º–µ—Å—Ç: ${timeSlots[text].max - timeSlots[text].current}\n` +
                         `–ó–∞–∫–∞–∑–æ–≤ —Å–µ–≥–æ–¥–Ω—è: ${userOrders[userId].count}/2`;
        bot.sendMessage('5266215596', orderText);
        
        users[userId].orders = [];
        users[userId].step = 'main';
      }
    }
    else if (text === '‚¨ÖÔ∏è –ù–∞–∑–∞–¥') {
      bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–æ:', foodMenu);
      users[userId].step = 'food';
    }
  }
});

// –§—É–Ω–∫—Ü–∏–∏
function cancelOrder(userId, chatId, orderIndex) {
  if (userOrders[userId] && userOrders[userId].orders[orderIndex]) {
    const order = userOrders[userId].orders[orderIndex];
    timeSlots[order.time].current--;
    
    const cancelText = `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${users[userId].name} (@${users[userId].username || '–Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞'}) –æ—Ç–º–µ–Ω–∏–ª –∑–∞–∫–∞–∑!\n` +
                     `–ë–ª—é–¥–∞: ${order.items.join(', ')}\n` +
                     `–í—Ä–µ–º—è: ${order.time}\n` +
                     `–û—Å–≤–æ–±–æ–¥–∏–ª–æ—Å—å –º–µ—Å—Ç–æ –Ω–∞ ${order.time}`;
    bot.sendMessage('5266215596', cancelText);
    
    userOrders[userId].orders.splice(orderIndex, 1);
    userOrders[userId].count--;
    
    bot.sendMessage(chatId, '‚ùå –í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω! –ú–µ—Å—Ç–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ.', mainMenu);
    users[userId].step = 'main';
  } else {
    bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞.', mainMenu);
  }
}

function updateFoodMenu() {
  foodMenu.reply_markup.keyboard = [
    [menuItems[0], menuItems[1]],
    [menuItems[2], menuItems[3]],
    [menuItems[4]],
    ['‚úÖ –ì–æ—Ç–æ–≤–æ', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥']
  ];
}

function showMainMenu(chatId) {
  bot.sendMessage(chatId, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', mainMenu);
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.use(express.json());
app.post('/webhook', (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

app.listen(process.env.PORT || 3000, () => {
  console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
});
